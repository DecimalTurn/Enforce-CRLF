name: Enforce-CRLF
description: 'Enforce CRLF.'
branding:
  icon: "corner-down-left"
  color: "blue"
inputs:
  extensions:
    description: 'List of extensions (including the dot) seperated by a comma.'
    required: true
  bot-name:
    description: 'Name of the bot that will perform the commit.'
    default: 'github-actions'
  bot-email:
    description: 'Email of the bot that will perform the commit.'
    default: 'github-actions@github.com'
runs:
  using: "composite"
  steps:
  - name: Checkout
    uses: actions/checkout@v4
  - name: Set up Python 3.10
    uses: actions/setup-python@v5
    with:
      python-version: "3.10"
  - name: Get tofrodos package
    uses: awalsh128/cache-apt-pkgs-action@latest
    with:
      packages: tofrodos
      version: 1.0
  - name: Run script
    run: |
      python '${{ github.action_path }}/enforce-crlf.py' "${{ inputs.extensions }}"
    shell: bash
  - name: Push content
    run: |
      git config user.name "${{ inputs.bot-name }}"
      git config user.email "${{ inputs.bot-email }}"
      
      # Create an array of extensions
      IFS=',' read -r -a extensions <<< "${{ inputs.extensions }}"
      
      # Build the git add pattern
      add_pattern=""
      for ext in "${extensions[@]}"; do
        trimmed_ext=$(echo "$ext" | xargs)  # Trim spaces
        add_pattern="$add_pattern *$trimmed_ext"
      done
      
      # Print the add pattern for debugging
      echo "Add pattern: $add_pattern"
      
      # Perform git add with the constructed pattern
      git add -v $add_pattern || true
      
      git status
      if [ -n "$(git diff --cached --exit-code)" ]; then
        echo "Changes detected"
        git commit -m "Enforce CRLF"
        git push --set-upstream origin $branch_name
      else
        echo "No changes to commit"
      fi
    shell: bash
