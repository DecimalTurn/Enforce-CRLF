name: Enforce-CRLF
description: 'Enforce CRLF.'
branding:
  icon: "corner-down-left"
  color: "blue"
inputs:
  extensions:
    description: 'List of extensions (including the dot) seperated by a comma.'
    required: true
  do-checkout:
    description: 'Set to true in order to let the action perform the checkout for you (default = false).'
    default: false    
  do-push:
    description: 'Set to true in order to let the action perform the checkout for you (default = false).'
    default: false
  bot-name:
    description: 'Name of the bot that will perform the commit.'
    default: 'github-actions[bot]'
  bot-email:
    description: 'Email of the bot that will perform the commit.'
    default: '41898282+github-actions[bot]@users.noreply.github.com'
runs:
  using: "composite"
  steps:
  - name: Check inputs
    run: |
      echo "extensions: '${{ inputs.extensions }}'"
      if [[ -z "${{ inputs.extensions }}" ]]; then
        echo "ðŸ”´ Error: No extensions provided."
        echo "Make sure you include the extensions input parameter. ie.:"
        echo "  uses: DecimalTurn/Enforce-CRLF@main"
        echo "  with:"
        echo "    extensions: .bas, .frm, .cls"
        exit 1
      fi
      IFS=',' read -r -a ext_array <<< "${{ inputs.extensions }}"
      for ext in "${ext_array[@]}"; do
        ext=$(echo "$ext" | xargs)  # Trim leading and trailing spaces
        if [[ $ext != .* ]]; then
          echo "ðŸ”´ Error: Extension '${ext}' does not begin with a dot."
          exit 1
        fi
        if [[ $ext =~ \  ]]; then
          echo "ðŸ”´ Error: Extension '${ext}' contains a space."
          exit 1
        fi
      done
    shell: bash
  - name: Configure Git
    run: |
      git config --global core.autocrlf false
      git config --global core.eol lf
    shell: bash
  - name: Checkout
    if: ${{ inputs.do-checkout }}
    uses: actions/checkout@v4
  - name: Check EOL configs
    run: |
      IFS=',' read -r -a ext_array <<< "${{ inputs.extensions }}"
      for ext in "${ext_array[@]}"; do
        result=$(git check-attr text *"${ext}")
        echo "$result"
        if [[ $result == *"text: auto" || $result == *"text: text" ]]; then
          echo "There is an issue with the ${ext} extension. The `text` attribute is set or it has a value of `auto` for that extension."
          echo "This means that you won't be able to commit changes with CRLF. You need to make sure that `text` is unspecified or unset (-text)"
          exit 1
        fi
      done
    shell: bash
  - name: Set up Python 3.10
    uses: actions/setup-python@v5
    with:
      python-version: "3.10"
  - name: Get tofrodos package
    uses: awalsh128/cache-apt-pkgs-action@latest
    with:
      packages: tofrodos
      version: 1.0
  - name: Run script
    run: |
      python '${{ github.action_path }}/enforce-crlf.py' "${{ inputs.extensions }}"
    shell: bash
  - name: Push content
    if: ${{ inputs.do-push }}
    uses: stefanzweifel/git-auto-commit-action@v5
    with:
      # Optional. Commit message for the created commit.
      # Defaults to "Apply automatic changes"
      commit_message: "Enforce CRLF\n\nGitHub Action: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}"
      # Optional commit user and author settings
      commit_user_name: ${{ inputs.bot-name }} # defaults to "github-actions[bot]"
      commit_user_email: ${{ inputs.bot-email }} # defaults to "41898282+github-actions[bot]@users.noreply.github.com"
  
  # Alternative approach to Push content using a bash script
  # - name: Push content
  #   run: |
  #     git config user.name "${{ inputs.bot-name }}"
  #     git config user.email "${{ inputs.bot-email }}"
      
  #     # Create an array of extensions
  #     IFS=',' read -r -a extensions <<< "${{ inputs.extensions }}"
      
  #     # Add files with the specified extensions
  #     for ext in "${extensions[@]}"; do
  #       trimmed_ext=$(echo "$ext" | xargs)  # Trim spaces
  #       echo "Adding files with extension: *$trimmed_ext"
  #       git add -v *"$trimmed_ext" || true
  #     done
      
  #     git status
  #     if [ -n "$(git diff --cached --exit-code)" ]; then
  #       echo "Changes detected"
  #       commit_message=$(printf "Enforce CRLF\n\nGitHub Action: %s/%s/actions/runs/%s" "${{ github.server_url }}" "${{ github.repository }}" "${{ github.run_id }}")
  #       git commit -m "$commit_message"        
  #       git push --set-upstream origin $branch_name
  #     else
  #       echo "No changes to commit"
  #     fi
  #   shell: bash
